SQL Assignment Submission

=== 1
Write a query to find the three medalists and their winning times for ``110m Hurdles Men'' at 2000 Olympics.

SELECT e.event_id, e.olympic_id, p.name, r.result
FROM events e 
	INNER JOIN results r
		ON e.event_id = r.event_id
	INNER JOIN players p 
		ON p.player_id = r.player_id
WHERE e.name = '110m Hurdles Men'
	AND e.olympic_id like '%2000%';
**************** RESULT ***************************************************************
 event_id | olympic_id |                   name                   | result 
----------+------------+------------------------------------------+--------
 E28      | SYD2000    | Anier Garcia                             |     13
 E28      | SYD2000    | Terrence Trammell                        |  13.16
 E28      | SYD2000    | Mark Crear                               |  13.22
(3 rows)
=============================================================================================

=== 2
Count the total number of players whose names start with a vowel ('A', 'E', 'I', 'O', 'U'). (Hint: Use "in" and "substr").

SELECT COUNT(SUBSTR(players.name,1,1)) 
FROM players 
WHERE SUBSTR(players.name,1,1) 
	IN ('A', 'E', 'I', 'O', 'U');
**************** RESULT ***************************************************************
 count 
-------
    84
(1 row)
=============================================================================================

=== 3
For how many events at the 2000 Olympics, the result of the event is noted in 'points'?

SELECT DISTINCT COUNT(e.name)
FROM events e INNER JOIN olympics o
	ON e.olympic_id = o.olympic_id
	WHERE e.result_noted_in = 'points'
	AND o.year = 2000;
**************** RESULT ***************************************************************
 count 
-------
     2
(1 row)
=============================================================================================

=== 4
For 2000 Olympics, find the 5 countries with the smallest values of ``number-of-medals/population''.

Question is ambiguous as to whether it wants the definitive number of medals or number of 
winnings per country. I went with the absolute number of medals per country 
(e.g. team of 4 winning goal will result in 4 medals)

SELECT countries.name, CAST(COUNT(results.result) AS DECIMAL)/countries.population as num
	FROM countries 
		LEFT OUTER JOIN players
			ON countries.country_id = players.country_id
		INNER JOIN results
			ON players.player_id = results.player_id 
		INNER JOIN events
			ON results.event_id = events.event_id
		INNER JOIN olympics
			ON olympics.olympic_id = events.olympic_id
			AND olympics.year = 2000
	GROUP BY countries.name, countries.population
	ORDER BY num ASC LIMIT 5; 

**************** RESULT ***************************************************************
                   name                   |              num               
------------------------------------------+--------------------------------
 China                                    | 0.0000000007556728359796996049
 France                                   |     0.000000016530144205672021
 Mexico                                   |     0.000000018686454376087318
 Canada                                   |     0.000000029948960083756460
 Nigeria                                  |     0.000000038014227965242831
(5 rows)
=============================================================================================

=== 5 
Write a query to find the number of players per country. The output should be a table with two attributes: country_name, num_players.

SELECT countries.name, COUNT(players.player_id) AS num_players
	FROM countries
		LEFT OUTER JOIN players
			ON countries.country_id = players.country_id
	GROUP BY countries.name
	ORDER BY countries.name ASC;
**************** RESULT ***************************************************************
                   name                   | num_players 
------------------------------------------+-------------
 Algeria                                  |           4
 Argentina                                |           1
 Australia                                |          34
 Austria                                  |           2
 Barbados                                 |           1
 Belarus                                  |           7
 Brazil                                   |           9
 Bulgaria                                 |           1
 Cameroon                                 |           1
 Canada                                   |           1
 China                                    |           8
 Costa Rica                               |           1
 Croatia                                  |           1
 Cuba                                     |          12
 Czech Republic                           |           3
 Denmark                                  |           2
 Dominican Republic                       |           1
 Eritrea                                  |           1
 Estonia                                  |           2
 Ethiopia                                 |          12
 Finland                                  |           1
 France                                   |          10
 Germany                                  |          22
 Greece                                   |           7
 Hungary                                  |           4
 Iceland                                  |           1
 Ireland                                  |           1
 Italy                                    |          12
 Jamaica                                  |          18
 Japan                                    |          16
 Kazakhstan                               |           2
 Kenya                                    |          13
 Latvia                                   |           2
 Lithuania                                |           2
 Mexico                                   |           3
 Morocco                                  |           5
 Mozambique                               |           1
 Netherlands                              |          13
 Nigeria                                  |          12
 Norway                                   |           3
 Poland                                   |           5
 Portugal                                 |           3
 Romania                                  |          10
 Russia                                   |          38
 Saudi Arabia                             |           1
 Slovakia                                 |           1
 Slovenia                                 |           1
 South Africa                             |          10
 Spain                                    |           4
 Sri Lanka                                |           1
 Sweden                                   |           9
 The Bahamas                              |           5
 Trinidad and Tobago                      |           2
 Turkey                                   |           1
 Ukraine                                  |           9
 United Kingdom                           |          12
 United States                            |          88
 Zimbabwe                                 |           1
(58 rows)

=============================================================================================

=== 6 
Write a query to list all players whose names end in 'd', sorted first by their Country ID in ascending order, and second by their Birthdate in descending order.

SELECT country_id, birthdate, name FROM players 
WHERE RIGHT(name,1) = 'd'
ORDER BY country_id ASC, birthdate DESC; 
**************** RESULT ***************************************************************
 country_id | birthdate  |                   name                   
------------+------------+------------------------------------------
 ALG        | 1980-10-04 | Abderrahmane Hammad                     
 AUS        | 1973-10-26 | Mark Ormrod                             
 CUB        | 1981-12-09 | Yunaika Crawford                        
 GER        | 1980-09-04 | Lars Conrad                             
 JAM        | 1978-07-21 | Beverly McDonald                        
 JAM        | 1977-08-05 | Michael Blackwood                       
 NED        | 1974-07-06 | Pieter van den Hoogenband               
 NOR        | 1972-02-04 | Trine Hattestad                         
 RSA        | 1975-08-06 | Darian Townsend                         
 USA        | 1981-04-08 | BJ Bedford                              
 USA        | 1980-10-22 | Amanda Beard                            
 USA        | 1978-11-20 | Shawn Crawford                          
 USA        | 1972-01-13 | Jon Drummond                            
(13 rows)
=============================================================================================

=== 7 
For 2004 Olympics, generate a list - (birthyear, num-players, num-gold-medals) - containing the years in which the players were born, the number of players born in each year, and the number of gold medals won by the players born in each year.

SELECT EXTRACT(YEAR FROM birthdate) AS birthyear,
COUNT(distinct p.player_id) AS num_players,
SUM(case WHEN ( r.medal = 'GOLD') THEN 1 ELSE 0 END ) AS num_gold_medals
FROM players p, results r, events e 
WHERE (p.player_id = r.player_id 
	AND r.event_id = e.event_id 
	AND e.olympic_id like '%2004%')
GROUP BY birthyear;

**************** RESULT ***************************************************************
 birthyear | num_players | num_gold_medals 
-----------+-------------+-----------------
      1971 |          26 |               9
      1972 |          15 |               3
      1973 |          14 |               5
      1974 |          22 |               9
      1975 |          17 |              11
      1976 |          12 |              17
      1977 |          15 |               4
      1978 |          29 |              15
      1979 |          18 |               7
      1980 |          18 |              12
      1981 |          11 |               2
      1982 |           8 |               2
      1983 |          13 |               2
      1984 |          17 |               7
      1985 |          21 |              11
(15 rows)

=============================================================================================

=== 8
Report all individual events where there was a tie in the score, and two or more players got awarded a Gold medal. The 'Events' table contains information about whether an event is individual or not (Hint: Use group by and having).

SELECT events.event_id 
FROM events INNER JOIN results 
	ON events.event_id = results.event_id
WHERE is_team_event = 0 AND results.medal = 'GOLD'
GROUP BY events.event_id
HAVING COUNT(results.medal) > 1;

**************** RESULT ***************************************************************
 event_id 
----------
 E108   
(1 row)
=============================================================================================

=== 9
Write a query to find the absolute differences between the gold medal and silver medal winners for all Butterfly events (Men and Women) at the Athens Olympics. The output should be: event_id, difference, where difference = time taken by silver medalist - time taken by gold medalist

SELECT events.event_id, silver.result - gold.result AS difference
FROM events
	INNER JOIN results silver 
		ON events.event_id = silver.event_id
	INNER JOIN results AS gold 
		ON silver.event_id = gold.event_id
WHERE events.name LIKE '%Butterfly%'
	AND events.olympic_id LIKE '%ATH%'
	AND silver.medal = 'SILVER' 
	AND gold.medal = 'GOLD'
GROUP BY silver.result, gold.result, events.event_id;

**************** RESULT ***************************************************************
 event_id |     difference     
----------+--------------------
 E43      |  0.519999999999996
 E13      | 0.0399999999999991
 E45      |  0.310000000000002
 E15      |               0.32
(4 rows)
=============================================================================================

=== 10
To complement the IndividualMedals table we created above, create a team medals table, with schema:

TeamMedals(country_id, event_id, medal, result)

The TeamMedals table should only contain one entry for each country for each team event. Fortunately for us, two teams from the same country can't compete in a team event. The information about whether an event is a team event is stored in the events table.

CREATE TABLE TeamMedals AS
SELECT DISTINCT p.country_id, r.event_id, r.medal, r.result
FROM players p, results r, events e
WHERE r.player_id = p.player_id 
	AND r.event_id = e.event_id
	AND e.is_team_event = 1; 

**************** RESULT ***************************************************************
SELECT 60
 country_id | event_id |  medal  | result 
------------+----------+---------+--------
 AUS        | E88      | SILVER  | 241.59
 NED        | E81      | SILVER  | 194.36
 RUS        | E99      | SILVER  | 200.16
 AUS        | E94      | GOLD    | 427.05
 GER        | E85      | SILVER  | 213.62
 USA        | E95      | GOLD    | 473.42
 AUS        | E93      | SILVER  | 427.46
 NED        | E84      | SILVER  | 219.83
 JAM        | E98      | BRONZE  | 178.78
 JPN        | E85      | BRONZE  | 215.22
 USA        | E90      | GOLD    |  37.61
 USA        | E94      | SILVER  | 432.64
 GER        | E86      | BRONZE  | 215.88
 BRA        | E90      | SILVER  |   37.9
 GER        | E95      | BRONZE  | 477.35
 RSA        | E81      | GOLD    | 193.17
 USA        | E88      | GOLD    |  238.3
 USA        | E99      | GOLD    | 199.01
 AUS        | E97      | SILVER  |  180.6
 NGR        | E97      | BRONZE  |  180.9
 USA        | E89      | SILVER  |  38.08
 GER        | E87      | BRONZE  | 240.72
 AUS        | E82      | GOLD    | 193.67
 AUS        | E96      | SILVER  | 478.52
 NGR        | E89      | BRONZE  |  38.23
 JAM        | E92      | SILVER  |  42.13
 JAM        | E99      | BRONZE  |    202
 FRA        | E91      | BRONZE  |  42.54
 CUB        | E90      | BRONZE  |  38.04
 GBR        | E89      | GOLD    |  38.07
 ITA        | E93      | BRONZE  | 431.83
 BAH        | E92      | GOLD    |  41.95
 CHN        | E95      | SILVER  | 475.97
 JPN        | E88      | BRONZE  | 244.16
 NGR        | E98      | SILVER  | 178.68
 RUS        | E91      | SILVER  |  42.27
 USA        | E87      | SILVER  | 239.12
 USA        | E86      | GOLD    | 213.73
 AUS        | E86      | SILVER  | 215.27
 RUS        | E100     | BRONZE  | 203.46
 SWE        | E84      | BRONZE  |  220.3
 USA        | E82      | SILVER  | 193.86
 JAM        | E100     | SILVER  | 203.25
 USA        | E84      | GOLD    | 216.61
 AUS        | E87      | GOLD    | 237.32
 USA        | E93      | GOLD    | 427.33
 USA        | E97      | GOLD    | 175.91
 BRA        | E82      | BRONZE  |  197.4
 USA        | E96      | GOLD    |  477.8
 USA        | E83      | SILVER  | 216.39
 GER        | E96      | BRONZE  | 478.64
 USA        | E100     | GOLD    | 202.62
 JAM        | E91      | GOLD    |  41.73
 NED        | E83      | BRONZE  | 217.59
 USA        | E85      | GOLD    | 210.68
 NED        | E94      | BRONZE  |  432.7
 AUS        | E83      | GOLD    | 215.94
 USA        | E92      | BRONZE  |   42.2
 USA        | E81      | BRONZE  | 194.62
 USA        | E98      | GOLD    | 176.35
(60 rows)

=============================================================================================

=== 11
Say we want to find the number of players in each country born in 1975. The following query works, but doesn't list countries with 0 players born in 1975 (we would like those countries in the output with 0 as the second column). Confirm that replacing inner join with left outer join doesn't work. How would you fix the query (while still using left outer join)?

Need to put the filter in the ON clause by using AND. 

LEFT OUTER JOIN merges the two databases and then all the rows from the outer table that do not match the inner table are added back in with NULL. The WHERE clause is only processed after the join and filters out all the NULLs. 

SELECT c.name, COUNT(p.name)
FROM countries c
LEFT OUTER JOIN players p ON c.country_id = p.country_id
AND EXTRACT(YEAR FROM p.birthdate) = 1975
GROUP BY c.name; 

**************** RESULT ***************************************************************
                  name                   | count 
------------------------------------------+-------
 Costa Rica                               |     0
 Eritrea                                  |     1
 Estonia                                  |     1
 Latvia                                   |     0
 Turkey                                   |     0
 Germany                                  |     1
 France                                   |     0
 Algeria                                  |     0
 Slovenia                                 |     0
 Japan                                    |     3
 Jamaica                                  |     1
 Spain                                    |     0
 Ukraine                                  |     0
 Belarus                                  |     1
 Cameroon                                 |     0
 Zimbabwe                                 |     0
 Ireland                                  |     0
 Saudi Arabia                             |     0
 Denmark                                  |     1
 Russia                                   |     0
 Iceland                                  |     0
 Lithuania                                |     1
 Netherlands                              |     0
 Portugal                                 |     0
 Barbados                                 |     0
 Nigeria                                  |     0
 Romania                                  |     1
 The Bahamas                              |     0
 Dominican Republic                       |     0
 Trinidad and Tobago                      |     0
 Canada                                   |     0
 Austria                                  |     0
 China                                    |     0
 Australia                                |     3
 Kenya                                    |     0
 South Africa                             |     4
 United States                            |     5
 Poland                                   |     0
 Argentina                                |     0
 Slovakia                                 |     0
 United Kingdom                           |     1
 Kazakhstan                               |     1
 Croatia                                  |     0
 Czech Republic                           |     1
 Cuba                                     |     1
 Italy                                    |     1
 Sweden                                   |     2
 Ethiopia                                 |     1
 Greece                                   |     0
 Brazil                                   |     1
 Morocco                                  |     0
 Hungary                                  |     0
 Mozambique                               |     0
 Finland                                  |     0
 Mexico                                   |     0
 Sri Lanka                                |     0
 Bulgaria                                 |     0
 Norway                                   |     0
(58 rows)

=============================================================================================
